<?php

/**
 * @file
 * Entity Reference Autocomplete (Test).
 */

/**
 * Implements hook_menu().
 */
function entityreference_autocomplete_test_menu() {
  $items = array();

  $items['entityreference-autocomplete/tests/form'] = array(
    'title' => 'Entity Reference Autocomplete (Test)',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'entityreference_autocomplete_test_form',
      // Entity type from path.
      3,
      // Entity ID from path.
      4,
      // Cardinality.
      ENTITYREFERENCE_AUTOCOMPLETE_CARDINALITY_UNLIMITED,
      // Bundles.
      array(),
      // Query settings.
      array(),
      // Value property.
      '#default_value',
    ),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * {@inheritdoc}
 *
 * @internal
 *
 * @see \Drupal\entityreference_autocomplete\Tests\BaseTest::buildForm()
 */
function entityreference_autocomplete_test_form(
  array $form,
  array &$form_state,
  $entity_type,
  $default_value,
  $cardinality = 1,
  array $bundles = array(),
  array $query_settings = array(),
  $value_property = '#default_value'
) {
  if (!in_array($value_property, array('#default_value', '#value'))) {
    throw new \InvalidArgumentException('Property, to assign value to, must be "#default_value" or "#value"!');
  }

  if (empty($query_settings)) {
    $query_settings = array(
      'limit' => 50,
    );
  }

  if (is_string($default_value) && strpos($default_value, ',') !== FALSE) {
    $default_value = explode(',', $default_value);
  }

  $form['entityreference'] = array(
    '#type' => 'entityreference',
    '#era_bundles' => $bundles,
    '#era_cardinality' => (int) $cardinality,
    '#era_entity_type' => $entity_type,
    '#era_query_settings' => $query_settings,
    $value_property => $default_value,
  );

  return system_settings_form($form);
}
